<?php

define('CART_PAGE_ID', 1);
define('ADDRESS_PAGE_ID', 2);
define('SELECT_ADDRESS_PAGE_ID', 3);
define('MY_ORDERS_PAGE_ID', 5);

require_once (drupal_get_path('module', 'oat_commerce') . '/model/session_manager.php');
require_once (drupal_get_path('module', 'oat_commerce') . '/model/order_manager.php');
require_once (drupal_get_path('module', 'oat_commerce') . '/model/address_manager.php');

/*
 * Hook_init
 * */
function oat_commerce_init() {
    $session_manager = new SessionManager();
    $session_manager->start();
}

/*
 * Hook_cron
 * */
function oat_commerce_cron() {
    // Remove previous opened sessions of anonymous users
    $date = strtotime('today - 1 day');
    $condition = date('Y-m-d H:i:s', $date);
    SessionManager::removeSessionsByIds(SessionManager::getSessionsToRemove($condition));
    // Remove previous opened sessions of registered users
    $date = strtotime('today - 1 month');
    $condition = date('Y-m-d H:i:s', $date);
    SessionManager::removeSessionsByIds(SessionManager::getSessionsToRemove($condition, false));
}

/**
 * Implements hook_form_alter().
 * Common hook to alter site forms
 */
function oat_commerce_form_alter(&$form, &$form_state, $form_id) {
    switch ($form_id) {
        case 'user_profile_form': // User profile form (used in Forgot password)
            break;
        case 'user_login':
        case 'user_login_block': // User login form
            $form['#attributes'] = array('autocomplete' => array('off'));
            $form['name']['#title'] = t('E-mail');
            $form['pass']['#title'] = t('Пароль');
            $form['remember_me']['#title'] = t('Запомнить меня');
            $form['links']['#markup'] = '<ul><li><a class="" title="Don\'t have an account ?" href="/user/register">Еще не зарегестрированны?</a></li>
                                         <li><a class="forgotten-password" title="Forgotten password" href="/user/password">Забыли пароль?</a></li><ul>';
            $form['name']['#description'] = t('');
            $form['pass']['#description'] = t('');
            $form['actions']['submit']['#value'] = t('Войти');
            $form['#validate'][] = 'oat_commerce_login_validate';
            break;
        case 'user_register_form': // User register form
            if (!path_is_admin(current_path())) {
                $form['#attributes'] = array('autocomplete' => array('off'));

                $form['field_full_name']['und'][0]['value']['#attributes']['placeholder'] = t("Полное имя");
                $form['field_full_name']['und'][0]['value']['#title'] = t("Полное имя");
                // User registration form
                $form['account']['name']['#element_validate'][] = 'oat_commerce_user_login_validate';
                $form['account']['name']['#type'] = 'hidden';
                $form['account']['name']['#value'] = 'email_registration_' . user_password();

                $form['account']['mail']['#attributes']['placeholder'] = t("E-mail");
                $form['account']['mail']['#description'] = t('');

                $form['account']['pass']['#type'] = "password";
                $form['account']['pass']['#attributes']['placeholder'] = t("Пароль");
                $form['account']['pass']['#title'] = t('Пароль');
                $form['account']['pass']['#description'] = t('');
                $form['account']['pass']['#minlength'] = 7;

                $form['actions']['submit']['#value'] = t('Зарегистрироваться');
                $form['#validate'][] = 'oat_commerce_custom_signup_validate';
            }
            break;
        case 'user_pass': // Forgot password form
            $form['actions']['submit']['#value'] = t('Запросить пароль');
            $form['name']['#element_validate'] = array('oat_commerce_email_element_validate');
            break;
        case 'user_pass_reset': // After reset link sent
            $form['actions']['submit']['#value'] = 'Войти';
            //user_cookie_save(array('oat_commerce_user_reset_pass' => 1));
            break;
        default:
            break;
    }
}

/*
 * Custom settings form validation
 * */
function oat_commerce_email_element_validate($element, &$form_state, $form) {
    if (!valid_email_address($element['#value'])) {
        form_error($element, t('Указан неверный E-mail адрес.'));
    }
}

/*
 * Custom login validate
 * */
function oat_commerce_login_validate($form, &$form_state) {
    if (!empty($form_state['values']['email']) && !valid_email_address($form_state['values']['email'])) {
        form_set_error('name', 'Введите корректный e-mail адрес.');
    } else if (!user_load_by_mail($form_state['values']['email'])) {
        form_set_error('name', 'Пользователя с таким e-mail нет в системе.');
    }

}

/**
 * User login validation
 * */
function oat_commerce_user_login_validate($form, &$form_state) {
    $name = !empty($form_state['values']['field_full_name']['und'][0]['value']) ? implode('.', explode(' ', trim($form_state['values']['field_full_name']['und'][0]['value']))) : '';

    if (empty($name) && strpos($form_state['values']['mail'], '@')) {
        $position = strpos($form_state['values']['mail'], '@');
        $name = substr($form_state['values']['mail'], 1, $position);
    }

    if (empty($name)) {
        $name = substr(str_shuffle(str_repeat("0123456789abcdefghijklmnopqrstuvwxyz", 12)), 0, 12);
    }

    $form_state['values']['name'] = strtolower(unique_name($name));
}

/**
 * Generate unique user name while registration
 * */
function unique_name($name) {
    $original_username = $name;
    $count = 1;
    while (user_load_by_name($name)) {
        $name = $original_username . '.' . $count++;
    }

    return $name;
}

/*
 * Before submit user
 * */
function oat_commerce_custom_signup_validate($form, &$form_state) {
    if (empty($form_state['values']['pass']) || (strlen($form_state['values']['pass']) < 7)) {
        form_set_error('pass', ' Пароль должен иметь минимум 7 символов.');
    }
}

/*
 * Create select address form
 * */
function oat_commerce_select_address_form($form, &$form_state) {
    if(!user_is_logged_in()) { // go to address form if user is not logged in
        drupal_goto(drupal_get_path_alias('node/'.ADDRESS_PAGE_ID));
    }

    global $user;
    $address_manager = new AddressManager();
    $user_addresses = $address_manager->getUserAddresses($user->uid);

    if(empty($user_addresses)) { // go to address form if user doesn't have addresses
        drupal_goto(drupal_get_path_alias('node/'.ADDRESS_PAGE_ID));
    }

    $form = array();

    foreach($user_addresses as $address) {

        $form['address_'.$address['id']] = array(
            '#prefix' => '<a href="/'.drupal_get_path_alias('node/'.ADDRESS_PAGE_ID).'?adr='.$address['id'].'"><div class="address">',
            '#suffix' => '</div></a>',
        );

        $form['address_'.$address['id']]['info'] = array(
            '#markup' => '<div class="city">'.$address['city'].'</div>
                          <div class="street">'.$address['street'].'</div>
                          <div class="house">'.$address['house'].'</div>
                          <div class="building">'.$address['building'].'</div>
                          <div class="flat">'.$address['flat'].'</div>
                          <div class="phone">'.$address['phone'].'</div>',
        );
    }

    $form['new_address'] = array(
        '#markup' => '<a href="/'.drupal_get_path_alias('node/'.ADDRESS_PAGE_ID).'">Другой адрес</a>',
    );

    return $form;
}

/*
 * Create address form
 * */
function oat_commerce_address_form($form, &$form_state) {
    global $user;
    $form = array();
    $address_info = array();

    if(user_is_logged_in() && !empty($_GET['adr'])) {
        $address_manager = new AddressManager();
        $address_info = $address_manager->getUserAddress($user->uid, (int)$_GET['adr']);
        // Hidden value
        $form['not_changed'] = array(
            '#type' => 'hidden',
            '#value' => 1,
            '#attributes' => array('class' =>array('address-not-changed'))
        );
        $form['address_id'] = array(
            '#type' => 'hidden',
            '#value' => (int)$_GET['adr'],
        );
    }

    $default_values = array(
        'city' => !empty($address_info['city']) ? $address_info['city'] : '',
        'street' => !empty($address_info['street']) ? $address_info['street'] : '',
        'house' => !empty($address_info['house']) ? $address_info['house'] : '',
        'building' => !empty($address_info['building']) ? $address_info['building'] : '',
        'flat' => !empty($address_info['flat']) ? $address_info['flat'] : '',
        'phone' => !empty($address_info['phone']) ? $address_info['phone'] : '',
        'email' => !empty($address_info['email']) ? $address_info['email'] : '',
    );

    if(empty($default_values['email']) && user_is_logged_in()) {
        $default_values['email'] = $user->mail;
    }

    // City
    $form['city'] = array(
        '#prefix' => '<div class="form-field address-field" data-val="'.$default_values['city'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Город'),
        '#required' => TRUE,
        '#default_value' => $default_values['city'],
        '#maxlength' => 64,
    );

    // Street
    $form['street'] = array(
        '#prefix' => '<div class="form-field address-field" data-val="'.$default_values['street'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Улица'),
        '#required' => TRUE,
        '#default_value' => $default_values['street'],
        '#maxlength' => 128,
    );

    // House
    $form['house'] = array(
        '#prefix' => '<div class="form-field address-field" data-val="'.$default_values['house'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Дом'),
        '#required' => TRUE,
        '#default_value' => $default_values['house'],
        '#maxlength' => 3,
    );

    // Building
    $form['building'] = array(
        '#prefix' => '<div class="form-field address-field" data-val="'.$default_values['building'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Корпус'),
        '#required' => TRUE,
        '#default_value' => $default_values['building'],
        '#maxlength' => 3,
    );

    // Flat
    $form['flat'] = array(
        '#prefix' => '<div class="form-field address-field" data-val="'.$default_values['flat'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Квартира'),
        '#required' => TRUE,
        '#default_value' => $default_values['flat'],
        '#maxlength' => 4,
    );

    // Phone
    $form['phone'] = array(
        '#prefix' => '<div class="form-field address-field" data-val="'.$default_values['phone'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Телефон'),
        '#required' => TRUE,
        '#default_value' => $default_values['phone'],
        '#maxlength' => 20,
    );

    // Email
    $form['email'] = array(
        '#prefix' => '<div class="form-field" data-val="'.$default_values['email'].'">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('E-mail'),
        '#required' => TRUE,
        '#default_value' => $default_values['email'],
        '#maxlength' => 128,
        '#element_validate' => array('oat_commerce_email_element_validate'),
    );

    // Comment
    $form['comment'] = array(
        '#title' => t('Дополнительный комментарий'),
        '#type' => 'textarea',
    );

    // Submit
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Оформить заказ'),
    );

    $form['#submit'][] = 'oat_commerce_address_form_submit';

    return $form;
}

/**
 * Submit order
 * */
function oat_commerce_address_form_submit($form, &$form_state) {
    // TODO: save address
    $address_manager = new AddressManager();
    $session_manager = new SessionManager();

    global $user;
    $uid = (int)$user->uid;
    $aid = 0;

    if(empty($form_state['input']['not_changed']) || empty($uid)) {
        $aid = $address_manager->saveAddress($uid, $session_manager->getSessionId(), $form_state['values']);
    } else {
        $aid = $form_state['input']['address_id'];
    }

    if(!empty($aid)) {
        $order_manager = new OrderManager();
        $order_manager->send($aid, $form_state['values']['comment']);
    } else {
        form_set_error('Address error', 'Can\'t send order. Not valid address.');
    }
}

/*
 * Create settings form
 * */
function oat_commerce_settings_form($form, &$form_state) {
    global $user;
    $user_info = user_load($user->uid);

    $form = array();

    $form['#attributes'] = array('autocomplete' => array('off'));

    $form['full_name'] = array(
        '#prefix' => '<div class="settings-field">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => t('Имя'),
        '#required' => TRUE,
        '#default_value' => !empty($user_info->field_full_name['und'][0]['value']) ? $user_info->field_full_name['und'][0]['value'] : '',
        '#maxlength' => 40,
    );
    $form['mail'] = array(
        '#prefix' => '<div class="settings-field">',
        '#suffix' => '</div>',
    );

    $form['mail']['email'] = array(
        '#type' => 'textfield',
        '#title' => t('E-mail'),
        '#required' => TRUE,
        '#default_value' => $user_info->mail,
        '#size' => 30,
        '#maxlength' => 128,
        '#element_validate' => array('oat_commerce_email_element_validate'),
    );

    $form['change_pass'] = array(
        '#prefix' => '<div class="settings-field"><label>Изменить пароль</label>',
        '#suffix' => '</div>',
    );

    $form['change_pass']['current_pass'] = array(
        '#type' => 'password',
        '#size' => 30,
        '#attributes' => array('placeholder' => 'Текущий пароль')
    );
    $form['change_pass']['pass'] = array(
        '#type' => 'password_confirm',
        '#size' => 25,
        '#process' => array('form_process_password_confirm', 'oat_commerce_alter_password_confirm'),
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Сохранить'),
    );

    $form['#validate'][] = 'oat_commerce_settings_form_validate';
    $form['#submit'][] = 'oat_commerce_settings_form_submit';


    return $form;
}

/**
 * Alter password and confirm password fields to remove title and insert placeholder.
 */
function oat_commerce_alter_password_confirm($element) {
    $element['pass1']['#title_display'] = "invisible";
    $element['pass1']['#attributes']['placeholder'] = t("Новый пароль");
    $element['pass2']['#title_display'] = "invisible";
    $element['pass2']['#attributes']['placeholder'] = t("Повторите новый пароль");
    return $element;
}

/**
 * Validate settings form
 */
function oat_commerce_settings_form_validate(&$form, &$form_state) {
    global $user;
    require_once('includes/password.inc');

    if (!empty($form_state['values']['email'])) {
        if (!valid_email_address($form_state['values']['email'])) {
            form_set_error('email', 'Указан неверный E-mail адрес.');
        } else if (($user->mail != $form_state['values']['email']) && user_load_by_mail($form_state['values']['email'])) {
            form_set_error('email', 'Пользователь с таким паролем уже существует.');
        }
    }

    $confirm_pass = $form_state['input']['pass']['pass2'];
    if (!empty($form_state['values']['current_pass']) && !user_check_password($form_state['values']['current_pass'], $user) || (empty($form_state['values']['current_pass']) && (!empty($form_state['values']['pass']) || !empty($confirm_pass)))) {
        form_set_error('current_pass', t('Не верный текущий пароль'));
    } else if (!empty($form_state['values']['current_pass']) && !empty($form_state['values']['current_pass']) && (strlen($form_state['values']['pass']) < 7)) {
        form_set_error('pass', ' Пароль должен иметь минимум 7 символов.');
    } else if ($form_state['values']['pass'] != $confirm_pass) {
        form_set_error('pass', 'Пароль не совпадает');
    }
}

/**
 * Save user settings
 */
function oat_commerce_settings_form_submit($form, &$form_state) {
    global $user;
    $user = user_load($user->uid);
    $update = $messages = array();
    $is_update = false;

    if (!empty($form_state['values']['full_name']) && ($user->field_full_name['und'][0]['value'] != $form_state['values']['full_name'])) {
        $update['field_full_name'] = array(
            'und' => array(
                0 => array(
                    'value' => $form_state['values']['full_name']
                ),
        ));
        $is_update = true;
        $messages[] = 'Имя изменено.';
    }

    if (!empty($form_state['values']['email']) && ($user->mail != $form_state['values']['email'])) {
        $update['mail'] = $form_state['values']['email'];
        $is_update = true;
        $messages[] = 'E-mail адрес изменен.';
    }

    if (!empty($form_state['values']['pass'])) {
        $update['pass'] = $form_state['values']['pass'];
        $is_update = true;
        $messages[] = 'Пароль изменен.';
    }

    if ($is_update) {
        foreach ($messages as $message) {
            drupal_set_message($message);
        }
        user_save($user, $update);
    }
}